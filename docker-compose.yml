services:
  

  neo4j:
    image: ${NEO4J_IMAGE:-docker.io/neo4j:5.25-community}
    container_name: neo4j
    volumes:
      - ./dev-servers/neo4j/logs:/logs
      - ./dev-servers/neo4j/config:/config
      - ./dev-servers/neo4j/data:/data
      - ./dev-servers/neo4j/plugins:/plugins  
    environment:
      - NEO4J_AUTH=${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-SuperSecurePassw0rd}
    ports:
      - "${NEO4J_PORT:-7474}:7474"
      - "7687:7687"
    restart: always
    networks:
      - servers

  postgres:
    image: ${POSTGRES_IMAGE:-docker.io/postgres:17-bullseye}
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-SuperSecurePassw0rd}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - ./dev-servers/postgres/data:/var/lib/postgresql/data
    restart: always
    networks:
      - servers

  pgvector:
    image: ${PGVECTOR_IMAGE:-docker.io/pgvector/pgvector:pg17}
    container_name: pgvector
    environment:
      - POSTGRES_USER=${PGVECTOR_USER:-postgres}
      - POSTGRES_PASSWORD=${PGVECTOR_PASSWORD:-SuperSecurePassw0rd}
      - POSTGRES_DB=${PGVECTOR_DB:-postgres}
    ports:
      - "${PGVECTOR_PORT:-5433}:5432"
    volumes:
      - ./dev-servers/pgvector/data:/var/lib/postgresql/data
    restart: always
    networks:
      - servers

  redis:
    image: ${REDIS_IMAGE:-docker.io/redis:7.4-alpine}
    container_name: redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - ./dev-servers/redis/data:/data
    restart: always
    networks:
      - servers

  rabbitmq:
    image: ${RABBITMQ_IMAGE:-docker.io/rabbitmq:4-management-alpine}
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "${RABBITMQ_MGMT_PORT:-15672}:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RMQ_USERNAME:-rmquser}
      - RABBITMQ_DEFAULT_PASS=${RMQ_PASSWORD:-SuperSecurePassw0rd}
    volumes:
      - ./dev-servers/rabbitmq/data:/var/lib/rabbitmq
    restart: always
    networks:
      - servers

  mongo:
    image: ${MONGO_IMAGE:-percona/percona-server-mongodb:latest}
    container_name: mongo
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME:-mongoadmin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-SuperSecurePassw0rd}
    volumes:
      - ./dev-servers/mongo/data:/data/db
    restart: always
    networks:
      - servers

  n8n:
    image: ${N8N_IMAGE:-n8nio/n8n:latest}
    container_name: n8n
    ports:
      - "${N8N_PORT:-5678}:5678"
    restart: always 
    volumes:
      - ./dev-servers/n8n/data:/home/node/.n8n
    depends_on:
      - rabbitmq
    networks:
      - servers


  minio:
    image: ${MINIO_IMAGE:-minio/minio:latest}
    container_name: minio
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - ./dev-servers/minio/data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-minioadmin}
      - MINIO_DATA_DIR=/data
      - MINIO_DEFAULT_BUCKET=${MINIO_BUCKET_NAME:-mys3bucket}
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - servers

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports: ["11435:11434"] # change the host port 11435
    volumes:
      - ./dev-servers/ollama:/root/.ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    networks:
      - servers

networks:
  servers:
    driver: bridge
